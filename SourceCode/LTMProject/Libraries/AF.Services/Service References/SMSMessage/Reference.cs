//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AF.Services.SMSMessage {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://smsapi.cell.com", ConfigurationName="SMSMessage.SmsAPIPortType")]
    public interface SmsAPIPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string QueryUserInfo(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> QueryUserInfoAsync(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string QueryReports(string in0, string in1, string in2, string in3, string in4, int in5);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> QueryReportsAsync(string in0, string in1, string in2, string in3, string in4, int in5);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string ReceiveMessage(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> ReceiveMessageAsync(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string UpdatePassword(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> UpdatePasswordAsync(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string UpdateSign(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> UpdateSignAsync(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string ReceiveReport(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> ReceiveReportAsync(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string SendMessage(string in0, string in1, string in2, string in3, string in4);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> SendMessageAsync(string in0, string in1, string in2, string in3, string in4);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SmsAPIPortTypeChannel : AF.Services.SMSMessage.SmsAPIPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SmsAPIPortTypeClient : System.ServiceModel.ClientBase<AF.Services.SMSMessage.SmsAPIPortType>, AF.Services.SMSMessage.SmsAPIPortType {
        
        public SmsAPIPortTypeClient() {
        }
        
        public SmsAPIPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmsAPIPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmsAPIPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmsAPIPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string QueryUserInfo(string in0, string in1) {
            return base.Channel.QueryUserInfo(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> QueryUserInfoAsync(string in0, string in1) {
            return base.Channel.QueryUserInfoAsync(in0, in1);
        }
        
        public string QueryReports(string in0, string in1, string in2, string in3, string in4, int in5) {
            return base.Channel.QueryReports(in0, in1, in2, in3, in4, in5);
        }
        
        public System.Threading.Tasks.Task<string> QueryReportsAsync(string in0, string in1, string in2, string in3, string in4, int in5) {
            return base.Channel.QueryReportsAsync(in0, in1, in2, in3, in4, in5);
        }
        
        public string ReceiveMessage(string in0, string in1) {
            return base.Channel.ReceiveMessage(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> ReceiveMessageAsync(string in0, string in1) {
            return base.Channel.ReceiveMessageAsync(in0, in1);
        }
        
        public string UpdatePassword(string in0, string in1, string in2) {
            return base.Channel.UpdatePassword(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePasswordAsync(string in0, string in1, string in2) {
            return base.Channel.UpdatePasswordAsync(in0, in1, in2);
        }
        
        public string UpdateSign(string in0, string in1, string in2) {
            return base.Channel.UpdateSign(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<string> UpdateSignAsync(string in0, string in1, string in2) {
            return base.Channel.UpdateSignAsync(in0, in1, in2);
        }
        
        public string ReceiveReport(string in0, string in1) {
            return base.Channel.ReceiveReport(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> ReceiveReportAsync(string in0, string in1) {
            return base.Channel.ReceiveReportAsync(in0, in1);
        }
        
        public string SendMessage(string in0, string in1, string in2, string in3, string in4) {
            return base.Channel.SendMessage(in0, in1, in2, in3, in4);
        }
        
        public System.Threading.Tasks.Task<string> SendMessageAsync(string in0, string in1, string in2, string in3, string in4) {
            return base.Channel.SendMessageAsync(in0, in1, in2, in3, in4);
        }
    }
}
